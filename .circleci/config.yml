# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  print_pipeline_id:
    description: "Print a CircleCI workflowID"
    parameters:
      to:
        type: string
        default: "Hello World"
    steps:
      - run: echo "This is a workflow ID:<< parameters.to >>"

# Use a package of configuration called an orb.
# orbs:
  # Declare a dependency on the welcome-orb
  # welcome: circleci/welcome-orb@0.4.1
jobs:
  
  print_workflow_id:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - print_pipeline_id: 
          to: $CIRCLE_WORKFLOW_ID
          
  print_hello:
    environment:
      WORD1: "hello"
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Print word "hello"
          command: |
            echo $WORD1


  print_world:
    environment:
      WORD2: "world"
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Print word "world"
          command: |
            echo $WORD2
 
  build:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - run:
          name: "echo an env var that is part of our project"
          command: |
            echo $MY_ENV_VAR

  save_hello_world_output:
    environment:
      WORD1: "Hello World"
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Save word "Hello World"
          command: echo "text $WORD to output here" > ~/output.txt
            
      - persist_to_workspace:
          root: ~/
          paths:
          - output.txt
  
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - run:
          name: Print the "Hello World" from workspace file
          command: cat ~/output.txt
            


# Orchestrate or schedule a set of jobs
workflows:

  test-env-vars:
    jobs:
      - print_workflow_id
  # Name the workflow "welcome"
  # welcome:
    # Run the welcome/run job in its own container
    # jobs:
      # - welcome/run
      # - print_hello 
      # - print_world:
      #     requires: [print_hello]
    # - save_hello_world_output
    # - print_output_file:
    #     requires: [save_hello_world_output]